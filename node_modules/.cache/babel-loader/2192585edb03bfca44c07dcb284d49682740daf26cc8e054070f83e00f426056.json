{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sophia\\\\Downloads\\\\Spring 2025\\\\Capstone Project\\\\CampusConnect_1\\\\capstone-project-campusconnect-team\\\\src\\\\pages\\\\MapNavigation.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, memo } from \"react\";\nimport './App.css'; // Adjust the path if necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapNavigation = /*#__PURE__*/_s(/*#__PURE__*/memo(_c = _s(({\n  destination,\n  userLocation,\n  travelMode,\n  onRouteCalculated\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const directionsServiceRef = useRef(null);\n  const directionsRendererRef = useRef(null);\n\n  //initalize map & directions services only once \n  useEffect(() => {\n    if (!window.google || !window.google.maps) {\n      console.error(\"Google Maps API not loaded.\");\n      return;\n    }\n\n    // Initialize the map\n    const map = new window.google.maps.Map(mapRef.current, {\n      zoom: 16,\n      center: userLocation || destination\n    });\n\n    // Initialize DirectionsService and DirectionsRenderer only once\n    if (!directionsServiceRef.current) {\n      directionsServiceRef.current = new window.google.maps.DirectionsService();\n    }\n    if (!directionsRendererRef.current) {\n      directionsRendererRef.current = new window.google.maps.DirectionsRenderer();\n      directionsRendererRef.current.setMap(map);\n    }\n\n    // Cleanup function to avoid memory leaks\n    return () => {\n      if (directionsRendererRef.current) {\n        directionsRendererRef.current.setMap(null);\n      }\n    };\n  }, [userLocation, destination]);\n\n  // Calculate and display the route\n  useEffect(() => {\n    if (userLocation && destination && directionsServiceRef.current && directionsRendererRef.current) {\n      const request = {\n        origin: userLocation,\n        destination: destination,\n        travelMode: window.google.maps.TravelMode[travelMode]\n      };\n      directionsServiceRef.current.route(request, (result, status) => {\n        if (status === window.google.maps.DirectionsStatus.OK) {\n          directionsRendererRef.current.setDirections(result);\n\n          // Extract distance and duration\n          const route = result.routes[0].legs[0];\n          const distance = route.distance.text;\n          const duration = route.duration.text;\n\n          // Pass distance and duration back to the parent component\n          onRouteCalculated({\n            [travelMode.toLowerCase()]: {\n              distance,\n              duration\n            }\n          });\n        } else {\n          console.error(\"Directions request failed:\", status);\n        }\n      });\n    }\n  }, [travelMode, userLocation, destination, onRouteCalculated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    className: \"map-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 12\n  }, this);\n}, \"R9Eo41Ky5Ads8EJ6lWcvzWBy9eU=\")), \"R9Eo41Ky5Ads8EJ6lWcvzWBy9eU=\");\n_c2 = MapNavigation;\nexport default MapNavigation;\nvar _c, _c2;\n$RefreshReg$(_c, \"MapNavigation$memo\");\n$RefreshReg$(_c2, \"MapNavigation\");","map":{"version":3,"names":["React","useEffect","useRef","memo","jsxDEV","_jsxDEV","MapNavigation","_s","_c","destination","userLocation","travelMode","onRouteCalculated","mapRef","directionsServiceRef","directionsRendererRef","window","google","maps","console","error","map","Map","current","zoom","center","DirectionsService","DirectionsRenderer","setMap","request","origin","TravelMode","route","result","status","DirectionsStatus","OK","setDirections","routes","legs","distance","text","duration","toLowerCase","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/Sophia/Downloads/Spring 2025/Capstone Project/CampusConnect_1/capstone-project-campusconnect-team/src/pages/MapNavigation.js"],"sourcesContent":["import React, { useEffect, useRef, memo } from \"react\";\nimport './App.css'; // Adjust the path if necessary\n\nconst MapNavigation = memo(({ destination, userLocation, travelMode, onRouteCalculated }) => {\n    const mapRef = useRef(null);\n    const directionsServiceRef = useRef(null);\n    const directionsRendererRef = useRef(null);\n\n    //initalize map & directions services only once \n    useEffect(() => {\n        if (!window.google || !window.google.maps) {\n            console.error(\"Google Maps API not loaded.\");\n            return;\n        }\n\n        // Initialize the map\n        const map = new window.google.maps.Map(mapRef.current, {\n            zoom: 16,\n            center: userLocation || destination,\n        });\n\n        // Initialize DirectionsService and DirectionsRenderer only once\n        if (!directionsServiceRef.current) {\n            directionsServiceRef.current = new window.google.maps.DirectionsService();\n        }\n\n        if (!directionsRendererRef.current) {\n            directionsRendererRef.current = new window.google.maps.DirectionsRenderer();\n            directionsRendererRef.current.setMap(map);\n        }\n\n        // Cleanup function to avoid memory leaks\n        return () => {\n            if (directionsRendererRef.current) {\n                directionsRendererRef.current.setMap(null);\n            }\n        };\n    }, [userLocation, destination]);\n\n    // Calculate and display the route\n    useEffect(() => {\n        if (userLocation && destination && directionsServiceRef.current && directionsRendererRef.current) {\n            const request = {\n                origin: userLocation,\n                destination: destination,\n                travelMode: window.google.maps.TravelMode[travelMode],\n            };\n\n            directionsServiceRef.current.route(request, (result, status) => {\n                if (status === window.google.maps.DirectionsStatus.OK) {\n                    directionsRendererRef.current.setDirections(result);\n\n                    // Extract distance and duration\n                    const route = result.routes[0].legs[0];\n                    const distance = route.distance.text;\n                    const duration = route.duration.text;\n\n                    // Pass distance and duration back to the parent component\n                    onRouteCalculated({\n                        [travelMode.toLowerCase()]: { distance, duration },\n                    });\n                } else {\n                    console.error(\"Directions request failed:\", status);\n                }\n            });\n        }\n    }, [travelMode, userLocation, destination, onRouteCalculated]);\n\n    return <div ref={mapRef} className=\"map-container\" />;\n});\n\nexport default MapNavigation;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}