{"ast":null,"code":"import { db } from \"./firebase\";\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\nexport const searchBuildings = async searchQuery => {\n  if (!searchQuery) return [];\n\n  // Debugging\n  console.log(`ðŸ”Ž Searching for: ${searchQuery}`);\n  const buildingsRef = collection(db, \"buildings\");\n  let results = []; // Use an array instead of a Map\n\n  //first search by name or keyword match\n  const keywordQuery = query(buildingsRef, where(\"search_keywords\", \"array-contains\", searchQuery.toLowerCase()));\n  const keywordSnapshot = await getDocs(keywordQuery);\n  keywordSnapshot.forEach(doc => {\n    if (!results.some(b => b.id === doc.id)) {\n      // Avoid duplicates\n      results.push({\n        id: doc.id,\n        ...doc.data()\n      });\n    }\n  });\n  console.log(`ðŸ“Œ Found ${results.length} results for keywords.`);\n\n  //if no results, search by services offered\n\n  const serviceQuery = query(buildingsRef, where(\"services_offered\", \"array-contains\", searchQuery));\n  const serviceSnapshot = await getDocs(serviceQuery);\n  serviceSnapshot.forEach(doc => {\n    if (!results.some(b => b.id === doc.id)) {\n      // Avoid duplicates\n      results.push({\n        id: doc.id,\n        ...doc.data()\n      });\n    }\n  });\n\n  //debugging\n  console.log(`âœ… Final Results: ${results.length}`);\n  return results;\n};","map":{"version":3,"names":["db","collection","getDocs","query","where","searchBuildings","searchQuery","console","log","buildingsRef","results","keywordQuery","toLowerCase","keywordSnapshot","forEach","doc","some","b","id","push","data","length","serviceQuery","serviceSnapshot"],"sources":["C:/Users/Sophia/Downloads/Spring 2025/Capstone Project/CampusConnect_1/capstone-project-campusconnect-team/src/services/firestoreSearchService.js"],"sourcesContent":["import { db } from \"./firebase\";\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\n\nexport const searchBuildings = async (searchQuery) => {\n    if (!searchQuery) return [];\n\n    // Debugging\n    console.log(`ðŸ”Ž Searching for: ${searchQuery}`);\n\n    const buildingsRef = collection(db, \"buildings\");\n    let results = []; // Use an array instead of a Map\n\n    //first search by name or keyword match\n    const keywordQuery = query(\n        buildingsRef,\n        where(\"search_keywords\", \"array-contains\", searchQuery.toLowerCase())\n    );\n\n    const keywordSnapshot = await getDocs(keywordQuery);\n    keywordSnapshot.forEach((doc) => {\n        if (!results.some((b) => b.id === doc.id)) { // Avoid duplicates\n            results.push({ id: doc.id, ...doc.data() });\n        }\n    });\n\n    console.log(`ðŸ“Œ Found ${results.length} results for keywords.`);\n\n    //if no results, search by services offered\n    \n        const serviceQuery = query(\n            buildingsRef,\n            where(\"services_offered\", \"array-contains\", searchQuery)\n        );\n\n        const serviceSnapshot = await getDocs(serviceQuery);\n        serviceSnapshot.forEach((doc) => {\n            if (!results.some((b) => b.id === doc.id)) { // Avoid duplicates\n                results.push({ id: doc.id, ...doc.data() });\n            }        \n        });\n    \n    //debugging\n    console.log(`âœ… Final Results: ${results.length}`);\n    return results;\n\n    \n};\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,YAAY;AAC/B,SAASC,UAAU,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;AAEtE,OAAO,MAAMC,eAAe,GAAG,MAAOC,WAAW,IAAK;EAClD,IAAI,CAACA,WAAW,EAAE,OAAO,EAAE;;EAE3B;EACAC,OAAO,CAACC,GAAG,CAAC,qBAAqBF,WAAW,EAAE,CAAC;EAE/C,MAAMG,YAAY,GAAGR,UAAU,CAACD,EAAE,EAAE,WAAW,CAAC;EAChD,IAAIU,OAAO,GAAG,EAAE,CAAC,CAAC;;EAElB;EACA,MAAMC,YAAY,GAAGR,KAAK,CACtBM,YAAY,EACZL,KAAK,CAAC,iBAAiB,EAAE,gBAAgB,EAAEE,WAAW,CAACM,WAAW,CAAC,CAAC,CACxE,CAAC;EAED,MAAMC,eAAe,GAAG,MAAMX,OAAO,CAACS,YAAY,CAAC;EACnDE,eAAe,CAACC,OAAO,CAAEC,GAAG,IAAK;IAC7B,IAAI,CAACL,OAAO,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKH,GAAG,CAACG,EAAE,CAAC,EAAE;MAAE;MACzCR,OAAO,CAACS,IAAI,CAAC;QAAED,EAAE,EAAEH,GAAG,CAACG,EAAE;QAAE,GAAGH,GAAG,CAACK,IAAI,CAAC;MAAE,CAAC,CAAC;IAC/C;EACJ,CAAC,CAAC;EAEFb,OAAO,CAACC,GAAG,CAAC,YAAYE,OAAO,CAACW,MAAM,wBAAwB,CAAC;;EAE/D;;EAEI,MAAMC,YAAY,GAAGnB,KAAK,CACtBM,YAAY,EACZL,KAAK,CAAC,kBAAkB,EAAE,gBAAgB,EAAEE,WAAW,CAC3D,CAAC;EAED,MAAMiB,eAAe,GAAG,MAAMrB,OAAO,CAACoB,YAAY,CAAC;EACnDC,eAAe,CAACT,OAAO,CAAEC,GAAG,IAAK;IAC7B,IAAI,CAACL,OAAO,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKH,GAAG,CAACG,EAAE,CAAC,EAAE;MAAE;MACzCR,OAAO,CAACS,IAAI,CAAC;QAAED,EAAE,EAAEH,GAAG,CAACG,EAAE;QAAE,GAAGH,GAAG,CAACK,IAAI,CAAC;MAAE,CAAC,CAAC;IAC/C;EACJ,CAAC,CAAC;;EAEN;EACAb,OAAO,CAACC,GAAG,CAAC,oBAAoBE,OAAO,CAACW,MAAM,EAAE,CAAC;EACjD,OAAOX,OAAO;AAGlB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}