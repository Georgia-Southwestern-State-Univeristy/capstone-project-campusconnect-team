{"ast":null,"code":"import { db } from \"./firebase\";\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\n\n/**\r\n * Search buildings by user input query.\r\n * Matches building_name or keywords stored in search_keywords array.\r\n */\nexport const searchBuildings = async searchQuery => {\n  if (!searchQuery) return []; // Don't search if query is empty\n\n  const buildingsRef = collection(db, \"buildings\");\n\n  // Firestore query to search by name or keywords\n  const q = query(buildingsRef, where(\"search_keywords\", \"array-contains\", searchQuery.toLowerCase()) // Case-insensitive search\n  );\n  const querySnapshot = await getDocs(q);\n  let results = [];\n  querySnapshot.forEach(doc => {\n    results.push({\n      id: doc.id,\n      ...doc.data()\n    });\n  });\n\n  // Fallback: If no results found, try searching with 'building_name' using a range query\n  if (results.length === 0) {\n    console.log(`🔍 No exact matches for '${searchQuery}', trying partial match...`);\n    const fallbackQuery = query(buildingsRef, where(\"building_name\", \">=\", searchQuery), where(\"building_name\", \"<=\", searchQuery + \"\\uf8ff\"));\n    const fallbackSnapshot = await getDocs(fallbackQuery);\n    fallbackSnapshot.forEach(doc => {\n      results.push({\n        id: doc.id,\n        ...doc.data()\n      });\n    });\n  }\n  return results;\n};","map":{"version":3,"names":["db","collection","getDocs","query","where","searchBuildings","searchQuery","buildingsRef","q","toLowerCase","querySnapshot","results","forEach","doc","push","id","data","length","console","log","fallbackQuery","fallbackSnapshot"],"sources":["C:/Users/Sophia/Downloads/Spring 2025/Capstone Project/CampusConnect_/CampusConnect/src/services/firestoreSearchService.js"],"sourcesContent":["import { db } from \"./firebase\";\r\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\r\n\r\n/**\r\n * Search buildings by user input query.\r\n * Matches building_name or keywords stored in search_keywords array.\r\n */\r\nexport const searchBuildings = async (searchQuery) => {\r\n    if (!searchQuery) return []; // Don't search if query is empty\r\n\r\n    const buildingsRef = collection(db, \"buildings\");\r\n\r\n    // Firestore query to search by name or keywords\r\n    const q = query(\r\n        buildingsRef,\r\n        where(\"search_keywords\", \"array-contains\", searchQuery.toLowerCase()) // Case-insensitive search\r\n    );\r\n\r\n    const querySnapshot = await getDocs(q);\r\n    let results = [];\r\n    \r\n    querySnapshot.forEach((doc) => {\r\n        results.push({ id: doc.id, ...doc.data() });\r\n    });\r\n\r\n    // Fallback: If no results found, try searching with 'building_name' using a range query\r\n    if (results.length === 0) {\r\n        console.log(`🔍 No exact matches for '${searchQuery}', trying partial match...`);\r\n        const fallbackQuery = query(\r\n            buildingsRef,\r\n            where(\"building_name\", \">=\", searchQuery),\r\n            where(\"building_name\", \"<=\", searchQuery + \"\\uf8ff\")\r\n        );\r\n        \r\n        const fallbackSnapshot = await getDocs(fallbackQuery);\r\n        fallbackSnapshot.forEach((doc) => {\r\n            results.push({ id: doc.id, ...doc.data() });\r\n        });\r\n    }\r\n\r\n    return results;\r\n};\r\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,YAAY;AAC/B,SAASC,UAAU,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;;AAEtE;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAG,MAAOC,WAAW,IAAK;EAClD,IAAI,CAACA,WAAW,EAAE,OAAO,EAAE,CAAC,CAAC;;EAE7B,MAAMC,YAAY,GAAGN,UAAU,CAACD,EAAE,EAAE,WAAW,CAAC;;EAEhD;EACA,MAAMQ,CAAC,GAAGL,KAAK,CACXI,YAAY,EACZH,KAAK,CAAC,iBAAiB,EAAE,gBAAgB,EAAEE,WAAW,CAACG,WAAW,CAAC,CAAC,CAAC,CAAC;EAC1E,CAAC;EAED,MAAMC,aAAa,GAAG,MAAMR,OAAO,CAACM,CAAC,CAAC;EACtC,IAAIG,OAAO,GAAG,EAAE;EAEhBD,aAAa,CAACE,OAAO,CAAEC,GAAG,IAAK;IAC3BF,OAAO,CAACG,IAAI,CAAC;MAAEC,EAAE,EAAEF,GAAG,CAACE,EAAE;MAAE,GAAGF,GAAG,CAACG,IAAI,CAAC;IAAE,CAAC,CAAC;EAC/C,CAAC,CAAC;;EAEF;EACA,IAAIL,OAAO,CAACM,MAAM,KAAK,CAAC,EAAE;IACtBC,OAAO,CAACC,GAAG,CAAC,4BAA4Bb,WAAW,4BAA4B,CAAC;IAChF,MAAMc,aAAa,GAAGjB,KAAK,CACvBI,YAAY,EACZH,KAAK,CAAC,eAAe,EAAE,IAAI,EAAEE,WAAW,CAAC,EACzCF,KAAK,CAAC,eAAe,EAAE,IAAI,EAAEE,WAAW,GAAG,QAAQ,CACvD,CAAC;IAED,MAAMe,gBAAgB,GAAG,MAAMnB,OAAO,CAACkB,aAAa,CAAC;IACrDC,gBAAgB,CAACT,OAAO,CAAEC,GAAG,IAAK;MAC9BF,OAAO,CAACG,IAAI,CAAC;QAAEC,EAAE,EAAEF,GAAG,CAACE,EAAE;QAAE,GAAGF,GAAG,CAACG,IAAI,CAAC;MAAE,CAAC,CAAC;IAC/C,CAAC,CAAC;EACN;EAEA,OAAOL,OAAO;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}