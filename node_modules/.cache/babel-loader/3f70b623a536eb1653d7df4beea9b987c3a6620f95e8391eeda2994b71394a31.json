{"ast":null,"code":"import { db } from \"./firebase\";\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\n\n/**\n * Search buildings by user input query.\n * Matches building_name, search_keywords, or services_offered.\n */\nexport const searchBuildings = async searchQuery => {\n  if (!searchQuery) return []; // Don't search if query is empty\n\n  const buildingsRef = collection(db, \"buildings\");\n  let results = [];\n\n  // First, search by name or keywords\n  const keywordQuery = query(buildingsRef, where(\"search_keywords\", \"array-contains\", searchQuery.toLowerCase()));\n  const keywordSnapshot = await getDocs(keywordQuery);\n  keywordSnapshot.forEach(doc => {\n    results.push({\n      id: doc.id,\n      ...doc.data()\n    });\n  });\n\n  // If only one result, return immediately\n  if (results.length === 1) {\n    return results;\n  }\n\n  // If no results found, try searching by services_offered\n  if (results.length === 0) {\n    console.log(`🔍 No name matches for '${searchQuery}', searching by services...`);\n    const serviceQuery = query(buildingsRef, where(\"services_offered\", \"array-contains\", searchQuery));\n    const serviceSnapshot = await getDocs(serviceQuery);\n    serviceSnapshot.forEach(doc => {\n      results.push({\n        id: doc.id,\n        ...doc.data()\n      });\n    });\n  }\n\n  // If still only one result, return it\n  return results;\n};","map":{"version":3,"names":["db","collection","getDocs","query","where","searchBuildings","searchQuery","buildingsRef","results","keywordQuery","toLowerCase","keywordSnapshot","forEach","doc","push","id","data","length","console","log","serviceQuery","serviceSnapshot"],"sources":["C:/Users/Sophia/Downloads/Spring 2025/Capstone Project/CampusConnect_1/capstone-project-campusconnect-team/src/services/firestoreSearchService.js"],"sourcesContent":["import { db } from \"./firebase\";\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\n\n/**\n * Search buildings by user input query.\n * Matches building_name, search_keywords, or services_offered.\n */\nexport const searchBuildings = async (searchQuery) => {\n    if (!searchQuery) return []; // Don't search if query is empty\n\n    const buildingsRef = collection(db, \"buildings\");\n    let results = [];\n\n    // First, search by name or keywords\n    const keywordQuery = query(\n        buildingsRef,\n        where(\"search_keywords\", \"array-contains\", searchQuery.toLowerCase())\n    );\n\n    const keywordSnapshot = await getDocs(keywordQuery);\n    keywordSnapshot.forEach((doc) => {\n        results.push({ id: doc.id, ...doc.data() });\n    });\n\n    // If only one result, return immediately\n    if (results.length === 1) {\n        return results;\n    }\n\n    // If no results found, try searching by services_offered\n    if (results.length === 0) {\n        console.log(`🔍 No name matches for '${searchQuery}', searching by services...`);\n        const serviceQuery = query(\n            buildingsRef,\n            where(\"services_offered\", \"array-contains\", searchQuery)\n        );\n\n        const serviceSnapshot = await getDocs(serviceQuery);\n        serviceSnapshot.forEach((doc) => {\n            results.push({ id: doc.id, ...doc.data() });\n        });\n    }\n\n    // If still only one result, return it\n    return results;\n};\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,YAAY;AAC/B,SAASC,UAAU,EAAEC,OAAO,EAAEC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;;AAEtE;AACA;AACA;AACA;AACA,OAAO,MAAMC,eAAe,GAAG,MAAOC,WAAW,IAAK;EAClD,IAAI,CAACA,WAAW,EAAE,OAAO,EAAE,CAAC,CAAC;;EAE7B,MAAMC,YAAY,GAAGN,UAAU,CAACD,EAAE,EAAE,WAAW,CAAC;EAChD,IAAIQ,OAAO,GAAG,EAAE;;EAEhB;EACA,MAAMC,YAAY,GAAGN,KAAK,CACtBI,YAAY,EACZH,KAAK,CAAC,iBAAiB,EAAE,gBAAgB,EAAEE,WAAW,CAACI,WAAW,CAAC,CAAC,CACxE,CAAC;EAED,MAAMC,eAAe,GAAG,MAAMT,OAAO,CAACO,YAAY,CAAC;EACnDE,eAAe,CAACC,OAAO,CAAEC,GAAG,IAAK;IAC7BL,OAAO,CAACM,IAAI,CAAC;MAAEC,EAAE,EAAEF,GAAG,CAACE,EAAE;MAAE,GAAGF,GAAG,CAACG,IAAI,CAAC;IAAE,CAAC,CAAC;EAC/C,CAAC,CAAC;;EAEF;EACA,IAAIR,OAAO,CAACS,MAAM,KAAK,CAAC,EAAE;IACtB,OAAOT,OAAO;EAClB;;EAEA;EACA,IAAIA,OAAO,CAACS,MAAM,KAAK,CAAC,EAAE;IACtBC,OAAO,CAACC,GAAG,CAAC,2BAA2Bb,WAAW,6BAA6B,CAAC;IAChF,MAAMc,YAAY,GAAGjB,KAAK,CACtBI,YAAY,EACZH,KAAK,CAAC,kBAAkB,EAAE,gBAAgB,EAAEE,WAAW,CAC3D,CAAC;IAED,MAAMe,eAAe,GAAG,MAAMnB,OAAO,CAACkB,YAAY,CAAC;IACnDC,eAAe,CAACT,OAAO,CAAEC,GAAG,IAAK;MAC7BL,OAAO,CAACM,IAAI,CAAC;QAAEC,EAAE,EAAEF,GAAG,CAACE,EAAE;QAAE,GAAGF,GAAG,CAACG,IAAI,CAAC;MAAE,CAAC,CAAC;IAC/C,CAAC,CAAC;EACN;;EAEA;EACA,OAAOR,OAAO;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}