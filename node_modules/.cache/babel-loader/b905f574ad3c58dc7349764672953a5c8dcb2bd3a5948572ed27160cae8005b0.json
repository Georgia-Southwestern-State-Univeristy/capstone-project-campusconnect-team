{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sophia\\\\Downloads\\\\Spring 2025\\\\Capstone Project\\\\CampusConnect_\\\\CampusConnect\\\\src\\\\pages\\\\Building.js\",\n  _building,\n  _building2,\n  _building3,\n  _building3$operating_;\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n/*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"mt-6\",\n  children: [(_building = building) !== null && _building !== void 0 && _building.phone_num ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\uD83D\\uDCDE Phone:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-disc ml-6\",\n      children: [Array.isArray(building.phone_num) ? building.phone_num.map((phone, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: phone\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 64\n      }, this)) // List each phone number if it's an array\n      : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: building.phone_num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 23\n      }, this), \" // Display single phone number if it's not an array\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"\\uD83D\\uDCDE Phone:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this), \" N/A\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this) // Display N/A if no phone number is available\n  , (_building2 = building) !== null && _building2 !== void 0 && _building2.email ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"\\uD83D\\uDCE7 Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-disc ml-6\",\n      children: [Array.isArray(building.email) ? building.email.map((email, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: email\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 60\n      }, this)) // List each email if it's an array\n      : /*#__PURE__*/_jsxDEV(\"li\", {\n        children: building.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 23\n      }, this), \" // Display single email if it's not an array\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"\\uD83D\\uDCE7 Email:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this), \" N/A\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this) // Display N/A if no email is available\n  , /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"\\uD83D\\uDD52 Operating Hours:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list-disc ml-6\",\n    children: ((_building3 = building) === null || _building3 === void 0 ? void 0 : (_building3$operating_ = _building3.operating_hours) === null || _building3$operating_ === void 0 ? void 0 : _building3$operating_.length) > 0 ? building.operating_hours.map((hour, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: hour\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this) // List each operating hour\n    ) : /*#__PURE__*/_jsxDEV(\"li\", {\n      children: \"No hours available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this) // Display message if no hours are available\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 1,\n  columnNumber: 1\n}, this);","map":{"version":3,"names":["_jsxDEV","className","children","_building","building","phone_num","_Fragment","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","phone","index","_building2","email","_building3","_building3$operating_","operating_hours","length","hour"],"sources":["C:/Users/Sophia/Downloads/Spring 2025/Capstone Project/CampusConnect_/CampusConnect/src/pages/Building.js"],"sourcesContent":["<div className=\"mt-6\">\r\n    {/* Phone Numbers */}\r\n    {building?.phone_num ? (\r\n        <>\r\n            <p><strong>ðŸ“ž Phone:</strong></p>\r\n            <ul className=\"list-disc ml-6\">\r\n                {Array.isArray(building.phone_num)\r\n                    ? building.phone_num.map((phone, index) => <li key={index}>{phone}</li>) // List each phone number if it's an array\r\n                    : <li>{building.phone_num}</li>} // Display single phone number if it's not an array\r\n            </ul>\r\n        </>\r\n    ) : (\r\n        <p><strong>ðŸ“ž Phone:</strong> N/A</p> // Display N/A if no phone number is available\r\n    )}\r\n\r\n    {/* Emails */}\r\n    {building?.email ? (\r\n        <>\r\n            <p><strong>ðŸ“§ Email:</strong></p>\r\n            <ul className=\"list-disc ml-6\">\r\n                {Array.isArray(building.email)\r\n                    ? building.email.map((email, index) => <li key={index}>{email}</li>) // List each email if it's an array\r\n                    : <li>{building.email}</li>} // Display single email if it's not an array\r\n            </ul>\r\n        </>\r\n    ) : (\r\n        <p><strong>ðŸ“§ Email:</strong> N/A</p> // Display N/A if no email is available\r\n    )}\r\n\r\n    {/* Operating Hours */}\r\n    <p className=\"mt-4\"><strong>ðŸ•’ Operating Hours:</strong></p>\r\n    <ul className=\"list-disc ml-6\">\r\n        {building?.operating_hours?.length > 0 ? (\r\n            building.operating_hours.map((hour, index) => (\r\n                <li key={index}>{hour}</li> // List each operating hour\r\n            ))\r\n        ) : (\r\n            <li>No hours available</li> // Display message if no hours are available\r\n        )}\r\n    </ul>\r\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}